<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
"http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd" [
<!ENTITY version "v0.2 ninja">
<!ENTITY license SYSTEM "fdl.xml">
]>
<!-- 
The cake is a lie.
-->
<book>
  <bookinfo>
    <title>ooc &version; Compiler Manual</title>

    <author>
      <firstname>Amos</firstname>

      <surname>Wenger</surname>
    </author>

    <copyright>
      <year>2009</year>

      <holder>Amos Wenger</holder>
    </copyright>

    <date>2009-06-26</date>

    <legalnotice>
      <para>Distributed under the terms of the <link linkend="fdl" os="">GNU
      Free Documentation License v1.3</link></para>
    </legalnotice>

    <abstract>
      <para>This is the manual of the ooc compiler version &version;.</para>
    </abstract>
  </bookinfo>

  <chapter>
    <title>Installation</title>

    <itemizedlist>
      <listitem>
        <para>Download the release for your platform from one of the mirrors
        at <ulink
        url="http://ooc-lang.org/download">http://ooc-lang.org/download</ulink></para>
      </listitem>

      <listitem>
        <para>Follow the instructions in the INSTALL file for your
        distribution.</para>
      </listitem>
    </itemizedlist>

    <para>Often, the installation is as easy as extracting the archive and
    adding ooc/bin to your PATH, or making a symbolic link to ooc/bin/ooc in
    /usr/bin/</para>
  </chapter>

  <chapter>
    <title>Usage</title>

    <section>
      <title>Examples</title>

      <para>This section contains typical examples of use of the ooc compiler.
      It should be enough to get you started</para>

      <section>
        <title>Hello world</title>

        <para>Let's assume you have the file helloworld.ooc containing</para>

        <programlisting>func main {

  printf("Hello world!");

}</programlisting>

        <para>You can compile it with</para>

        <programlisting>ooc helloworld.ooc</programlisting>

        <para>or</para>

        <programlisting>ooc helloworld</programlisting>

        <para>This will produce an executable named
        <literal>helloworld</literal> or <literal>helloworld.exe</literal>
        depending on your operating system.</para>

        <para>Compilation without the file extension is very convenient with
        auto completion in shells. Often, when you have
        <literal>helloworld.ooc</literal> and <literal>helloworld</literal> in
        the same directory, if you type
        <literal><literal>he</literal></literal> and press Tab, it will be
        completed to <literal>helloworld</literal> only.</para>
      </section>

      <section>
        <title>Packages</title>

        <para>Let's assume you have the file <literal>dummytest.ooc</literal>
        in the package <literal>test</literal>, (path:
        <filename>test/dummytest.ooc</filename>), you can compile it
        with:</para>

        <programlisting>ooc test/dummytest.ooc</programlisting>

        <para>or</para>

        <programlisting>ooc test.dummytest</programlisting>

        <para>Either way work exactly the same.</para>
      </section>
    </section>

    <section>
      <title>Options</title>

      <section>
        <title>Verbose output</title>

        <para>The <literal>-v</literal> option provides a lot more information
        about the compilation process. It can help sort out dependencies
        issues, and prints the commands it issues (e.g. gcc command line
        calls).</para>
      </section>
    </section>
  </chapter>

  <appendix id="fdl">
    &license;
  </appendix>
</book>
