<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<HTML
><HEAD
><TITLE
>Types</TITLE
><META
NAME="GENERATOR"
CONTENT="Modular DocBook HTML Stylesheet Version 1.79"/><LINK
REL="HOME"
TITLE="ooc Language Reference"
HREF="book1.htm"/><LINK
REL="PREVIOUS"
TITLE="ooc Language Reference"
HREF="book1.htm"/><LINK
REL="NEXT"
TITLE="C Types"
HREF="x24.htm"/></HEAD
><BODY
CLASS="chapter"
BGCOLOR="#FFFFFF"
TEXT="#000000"
LINK="#0000FF"
VLINK="#840084"
ALINK="#0000FF"
><DIV
CLASS="NAVHEADER"
><TABLE
SUMMARY="Header navigation table"
WIDTH="100%"
BORDER="0"
CELLPADDING="0"
CELLSPACING="0"
><TR
><TH
COLSPAN="3"
ALIGN="center"
>ooc Language Reference</TH
></TR
><TR
><TD
WIDTH="10%"
ALIGN="left"
VALIGN="bottom"
><A
HREF="book1.htm"
ACCESSKEY="P"
>Prev</A
></TD
><TD
WIDTH="80%"
ALIGN="center"
VALIGN="bottom"
></TD
><TD
WIDTH="10%"
ALIGN="right"
VALIGN="bottom"
><A
HREF="x24.htm"
ACCESSKEY="N"
>Next</A
></TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="100%"/></DIV
><DIV
CLASS="chapter"
><H1
><A
NAME="AEN14"
></A
>Chapter 1. Types</H1
><DIV
CLASS="TOC"
><DL
><DT
><B
>Table of Contents</B
></DT
><DT
><A
HREF="c14.htm#AEN16"
>Capitalization</A
></DT
><DT
><A
HREF="x24.htm"
>C Types</A
></DT
></DL
></DIV
><DIV
CLASS="section"
><H1
CLASS="section"
><A
NAME="AEN16"
>Capitalization</A
></H1
><P
>All types should be in <TT
CLASS="literal"
>CamelCase</TT
>, all variables
      and functions in <TT
CLASS="literal"
>camelCase</TT
>. It is a significant
      difference from C and Java, for example. In ooc, an integer is declared
      as <TT
CLASS="literal"
>Int</TT
>, a boolean as <TT
CLASS="literal"
>Bool</TT
>, and so
      on.</P
><P
>The justification for that is consistency. In Java, for example,
      primitive types are in lowercase (int, byte, short) and classes are in
      CamelCase (String, System). There is some kind of consistency in this
      model, ie. you clearly see what is low-level and high-level. However,
      ooc takes another approach of consistency. Implementation details
      shouldn't interfere with the formatting of the source code. Hence, no
      distinction is made between an Int and e.g. a MyClass, from a user point
      of view.</P
></DIV
></DIV
><DIV
CLASS="NAVFOOTER"
><HR
ALIGN="LEFT"
WIDTH="100%"/><TABLE
SUMMARY="Footer navigation table"
WIDTH="100%"
BORDER="0"
CELLPADDING="0"
CELLSPACING="0"
><TR
><TD
WIDTH="33%"
ALIGN="left"
VALIGN="top"
><A
HREF="book1.htm"
ACCESSKEY="P"
>Prev</A
></TD
><TD
WIDTH="34%"
ALIGN="center"
VALIGN="top"
><A
HREF="book1.htm"
ACCESSKEY="H"
>Home</A
></TD
><TD
WIDTH="33%"
ALIGN="right"
VALIGN="top"
><A
HREF="x24.htm"
ACCESSKEY="N"
>Next</A
></TD
></TR
><TR
><TD
WIDTH="33%"
ALIGN="left"
VALIGN="top"
>ooc Language Reference</TD
><TD
WIDTH="34%"
ALIGN="center"
VALIGN="top"
>&nbsp;</TD
><TD
WIDTH="33%"
ALIGN="right"
VALIGN="top"
>C Types</TD
></TR
></TABLE
></DIV
></BODY
></HTML
>