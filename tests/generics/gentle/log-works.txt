
=======================================

Tinkerer, round 1, 7 left ([025-le-retour-du-fils-de-la-vengeance, lang.stdio, lang.BasicTypes, lang.memory, lang.ooclib, structs.ArrayList, structs.List])
Parent is.. anything but a Line: [([ctx as ArrayList<Value<Pointer>>])->get(Int:1) as Value<Pointer>], unwrapping. ([ctx as ArrayList<Value<Pointer>>])->get(Int:1)
(1) [ MemberCall ]		([ctx as ArrayList<Value<Pointer>>])->get(Int:1) has RESTARTed.
Replacing varDecl VariableDecl|candidate:T with type uint8_t, for its own good
(2) [ VariableDecl ]		VariableDecl|candidate:uint8_t[] has RESTARTed.
Replacing varDecl VariableDecl|element:T with type uint8_t, for its own good
(3) [ VariableDecl ]		VariableDecl|element:uint8_t[] has RESTARTed.

=======================================

Tinkerer, round 2, 7 left ([025-le-retour-du-fils-de-la-vengeance, lang.stdio, lang.BasicTypes, lang.memory, lang.ooclib, structs.ArrayList, structs.List])
Parent is an vDeclAtom VariableDeclAtom: gcall=([ctx as ArrayList<Value<Pointer>>])->get(Int:1), unwrapping.([ctx as ArrayList<Value<Pointer>>])->get(Int:1)
|| stack.peek(3) = VariableDeclFromExpr gcall:T = ([ctx as ArrayList<Value<Pointer>>])->get(Int:1)
Module lang.stdio finished resolving.
Module lang.memory finished resolving.
Module lang.ooclib finished resolving.
Replacing varDecl VariableDecl|candidate:T with type uint8_t, for its own good
(4) [ VariableDecl ]		VariableDecl|candidate:uint8_t[] has RESTARTed.
Parent is.. anything but a Line: [(iter)->next()], unwrapping. (iter)->next()
(5) [ MemberCall ]		(iter)->next() has RESTARTed.

=======================================

Tinkerer, round 3, 4 left ([025-le-retour-du-fils-de-la-vengeance, lang.BasicTypes, structs.ArrayList, structs.List])
Module 025-le-retour-du-fils-de-la-vengeance finished resolving.
Module lang.BasicTypes finished resolving.
ArrayList<T> is generic-recursive, trying to get <ArrayListIterator> in it.
T* is generic-recursive, trying to get <ArrayList> in it.
Parent is an assignment Assignment: element = (iter1)->next(), unwrapping. (iter1)->next()
(6) [ MemberCall ]		(iter1)->next() has RESTARTed.

=======================================

Tinkerer, round 4, 2 left ([structs.ArrayList, structs.List])
(7) [ VariableDeclFromExpr ]		VariableDeclFromExpr element:T = ArrayAccess|this->data[[index]] has RESTARTed.
Parent is an vDeclAtom VariableDeclAtom: gcall=(iter)->next(), unwrapping.(iter)->next()
|| stack.peek(3) = VariableDeclFromExpr gcall:T = (iter)->next()

=======================================

Tinkerer, round 5, 2 left ([structs.ArrayList, structs.List])
Replacing varDecl VariableDecl|element:T with type uint8_t, for its own good
(8) [ VariableDecl ]		VariableDecl|element:uint8_t[] has RESTARTed.
Parent is an vDeclAtom VariableDeclAtom: retval=(this)->get(Int:(this)->lastIndex()), unwrapping.(this)->get(Int:(this)->lastIndex())
|| stack.peek(3) = VariableDeclFromExpr retval:Class = (this)->get(Int:(this)->lastIndex())
Parent is.. anything but a Line: [(this)->get(Int:i)], unwrapping. (this)->get(Int:i)
(9) [ MemberCall ]		(this)->get(Int:i) has RESTARTed.

=======================================

Tinkerer, round 6, 2 left ([structs.ArrayList, structs.List])
Parent is an vDeclAtom VariableDeclAtom: element=(this->list)->get(Int:this->index), unwrapping.(this->list)->get(Int:this->index)
|| stack.peek(3) = VariableDeclFromExpr element:T = (this->list)->get(Int:this->index)
Replacing varDecl VariableDeclFromExpr element:T = null with type uint8_t, for its own good
(10) [ VariableDeclFromExpr ]		VariableDeclFromExpr element:uint8_t[] = null has RESTARTed.
List<T> is generic-recursive, trying to get <T> in it.
Matched <List> with List<T>, varAccType-wise
Matched <T> with this->T, genericRecursive-wise
List<T> is generic-recursive, trying to get <T> in it.
Matched <List> with List<T>, varAccType-wise
Matched <T> with this->T, genericRecursive-wise
Parent is.. anything but a Line: &(__OP_IDX_List_Int__T(List<T>:this, Int:i)), unwrapping. __OP_IDX_List_Int__T(List<T>:this, Int:i)
(11) [ FunctionCall ]		__OP_IDX_List_Int__T(List<T>:this, Int:i) has RESTARTed.

=======================================

Tinkerer, round 7, 2 left ([structs.ArrayList, structs.List])
Parent is an vDeclAtom VariableDeclAtom: element=(this->list)->get(Int:this->index), unwrapping.(this->list)->get(Int:this->index)
|| stack.peek(3) = VariableDeclFromExpr element:T = (this->list)->get(Int:this->index)
Replacing varDecl VariableDeclFromExpr element:T = null with type uint8_t, for its own good
(12) [ VariableDeclFromExpr ]		VariableDeclFromExpr element:uint8_t[] = null has RESTARTed.
Parent is an vDeclAtom VariableDeclAtom: gcall=__OP_IDX_List_Int__T(List<T>:this, Int:i), unwrapping.__OP_IDX_List_Int__T(List<T>:this, Int:i)
|| stack.peek(3) = VariableDeclFromExpr gcall:Class = __OP_IDX_List_Int__T(List<T>:this, Int:i)
List<T> is generic-recursive, trying to get <Class> in it.
Parent is an vDeclAtom VariableDeclAtom: gcall=(this)->get(Int:i), unwrapping.(this)->get(Int:i)
|| stack.peek(3) = VariableDeclFromExpr gcall:Class = (this)->get(Int:i)
Parent is.. anything but a Line: return (list)->get(Int:i), unwrapping. (list)->get(Int:i)
(13) [ MemberCall ]		(list)->get(Int:i) has RESTARTed.

=======================================

Tinkerer, round 8, 2 left ([structs.ArrayList, structs.List])
Parent is an vDeclAtom VariableDeclAtom: result=(this->list)->removeAt(Int:(this->index - 1)), unwrapping.(this->list)->removeAt(Int:(this->index - 1))
|| stack.peek(3) = VariableDeclFromExpr result:T = (this->list)->removeAt(Int:(this->index - 1))
Replacing varDecl VariableDeclFromExpr result:T = null with type uint8_t, for its own good
(14) [ VariableDeclFromExpr ]		VariableDeclFromExpr result:uint8_t[] = null has RESTARTed.
Parent is an vDeclAtom VariableDeclAtom: gcall=(list)->get(Int:i), unwrapping.(list)->get(Int:i)
|| stack.peek(3) = VariableDeclFromExpr gcall:T = (list)->get(Int:i)
Replacing varDecl VariableDeclFromExpr gcall:T = null with type uint8_t, for its own good
(15) [ VariableDeclFromExpr ]		VariableDeclFromExpr gcall:uint8_t[] = null has RESTARTed.

=======================================

Tinkerer, round 9, 2 left ([structs.ArrayList, structs.List])
Parent is.. anything but a Line: return (list)->get(Int:i), unwrapping. (list)->get(Int:i)
(16) [ MemberCall ]		(list)->get(Int:i) has RESTARTed.

=======================================

Tinkerer, round 10, 2 left ([structs.ArrayList, structs.List])
Parent is an vDeclAtom VariableDeclAtom: gcall=(list)->get(Int:i), unwrapping.(list)->get(Int:i)
|| stack.peek(3) = VariableDeclFromExpr gcall:T = (list)->get(Int:i)
Replacing varDecl VariableDeclFromExpr gcall:T = null with type uint8_t, for its own good
(17) [ VariableDeclFromExpr ]		VariableDeclFromExpr gcall:uint8_t[] = null has RESTARTed.
Module structs.List finished resolving.

=======================================

Tinkerer, round 11, 1 left ([structs.ArrayList])

=======================================

Tinkerer, round 12, 1 left ([structs.ArrayList])
Module structs.ArrayList finished resolving.
ooc_tmp/gentle/025-le-retour-du-fils-de-la-vengeance.c: In function ‘test’:
ooc_tmp/gentle/025-le-retour-du-fils-de-la-vengeance.c:164: attention : déclaration sans effet
